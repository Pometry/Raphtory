name: Run Python test
on:
  workflow_call:
    inputs:
      skip_tests:
        type: boolean
        default: false
        required: false
      test_python_lower:
        type: boolean
        default: false
        required: false
# DO NOT CHANGE NAME OF WORKFLOW, USED IN OTHER WORKFLOWS KEEP "Rust Tests"
jobs:
  select-strategy:
    runs-on: ubuntu-latest
    outputs:
      python-versions: ${{ steps.set-matrix.outputs.python-versions }}
    steps:
      - id: set-matrix
        run: |
            echo "python-versions=[\"3.8\",\"3.12\"]" >> $GITHUB_OUTPUT
  python-test:
    if: ${{ !inputs.skip_tests }}
    name: Python Tests
    needs: select-strategy
    strategy:
      matrix:
        python: ${{ fromJson(needs.select-strategy.outputs.python-versions) }}
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: '${{ matrix.os }}'
    steps:
      - uses: actions/checkout@v3
        name: Checkout
      - uses: actions-rs/toolchain@v1
        name: Setup Rust
        with:
          profile: minimal
          toolchain: 1.75.0
          override: true
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        name: Cargo cache
        with:
          cache-all-crates: true
      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
      - name: Run Maturin develop
        uses: PyO3/maturin-action@v1
        with:
          working-directory: ./python
          command: build
          target: ${{ matrix.target }}
          args: --release
      - name: Install Python dependencies (Unix)
        if: "contains(matrix.os, 'Ubuntu') || contains(matrix.os, 'macOS')"
        run: |
          python -m pip install -q pytest networkx numpy seaborn pandas nbmake pytest-xdist matplotlib pyvis nbconvert ipywidgets
          python -m pip install target/wheels/raphtory-*.whl
          python -m pip install -e examples/netflow
      - name: Install Python dependencies (Windows)
        if: "contains(matrix.os, 'Windows')"
        run: |
          python -m pip install -q pytest networkx numpy seaborn pandas nbmake pytest-xdist matplotlib pyvis nbconvert ipywidgets
          $folder_path = "target/wheels/"
          Get-ChildItem -Path $folder_path -Recurse -Include *.whl | ForEach-Object {
            python -m pip install "$($_.FullName)"
          }
          python -m pip install -e examples/netflow
      - name: Run Python tests
        run: |
          cd python/tests && pytest --nbmake --nbmake-timeout=1200 .
      - name: Run Python extension tests
        run: |
          cd examples/netflow/test && pytest .
      - name: Run example notebook
        working-directory: examples/python/socio-patterns
        run: jupyter nbconvert --to notebook --execute example.ipynb

