name: _Release 2 - Publish Rust packages to crates.io
on:
  workflow_call:
    inputs:
      base:
        description: 'Name of branch to run the release from'
        type: 'string'
        required: true
      dry_run:
        description: 'DRY RUN: If true will not publish the release and will not push anything to PyPi/crates.io'
        type: boolean
        required: true

jobs:
  release-rust:
    name: Release Rust package to crates.io
    runs-on: ubuntu-latest
    env:
      CRATES: "-p raphtory-api -p pometry-storage -p raphtory-core -p raphtory-storage -p raphtory -p raphtory-graphql"
    steps:
      - name: "Check if user has write access"
        uses: "lannonbr/repo-permission-check-action@2.0.0"
        with:
          permission: "write"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.base }}
      - name: Setup rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Dry run publish all crates
        run: cargo publish ${{ env.CRATES }} --dry-run
      - name: Publish all crates
        if: ${{ !inputs.dry_run }}
        run: cargo publish ${{ env.CRATES }} --token ${{ secrets.CRATES_TOKEN }}
