name: Publish Rust crates to crates.io
on:
  workflow_dispatch:
    inputs: &inputs
      base:
        description: 'Name of branch to run the release from'
        type: 'string'
        default: 'master'
      dry_run:
        description: 'If true will not publish to crates.io'
        type: boolean
        default: false
      raphtory-api:
        description: 'Publish raphtory-api'
        type: boolean
        default: true
      pometry-storage:
        description: 'Publish pometry-storage'
        type: boolean
        default: true
      raphtory-core:
        description: 'Publish raphtory-core'
        type: boolean
        default: true
      raphtory-storage:
        description: 'Publish raphtory-storage'
        type: boolean
        default: true
      raphtory:
        description: 'Publish raphtory'
        type: boolean
        default: true
      raphtory-graphql:
        description: 'Publish raphtory-graphql'
        type: boolean
        default: true
  workflow_call:
    inputs: *inputs

jobs:
  release-rust:
    name: Release Rust package to crates.io
    runs-on: ubuntu-latest
    steps:
      - name: "Check if user has write access"
        uses: "lannonbr/repo-permission-check-action@2.0.0"
        with:
          permission: "write"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.base }}
      - name: Setup rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Build list of crates to publish
        run: |
          crates=""
          for crate in raphtory-api pometry-storage raphtory-core raphtory-storage raphtory raphtory-graphql; do
            if [ "${{ inputs[$crate] }}" = "true" ]; then
              crates="$crates -p $crate"
            fi
          done
          echo "CRATES_TO_PUBLISH=$crates" >> $GITHUB_ENV
      - run: echo "${{ env.CRATES_TO_PUBLISH }}"
      - name: Dry run publish all crates
        run: cargo publish ${{ env.CRATES_TO_PUBLISH }} --dry-run
      - name: Publish all crates
        if: ${{ !inputs.dry_run }}
        run: cargo publish ${{ env.CRATES_TO_PUBLISH }} --token ${{ secrets.CRATES_TOKEN }}
