name: Run Rust test
on:
  workflow_call:
    inputs:
      skip_tests:
        type: boolean
        default: false
        required: false
# DO NOT CHANGE NAME OF WORKFLOW, USED IN OTHER WORKFLOWS KEEP "Rust Tests"
jobs:
  rust-test:
    if: ${{ !inputs.skip_tests }}
    name: Rust Tests
    runs-on: '${{ matrix.os }}'
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
      RUST_BACKTRACE: 1
    strategy:
      matrix:
        include:
          - { os: macos-latest, flags: "" }
          - { os: ubuntu-20.04, flags: "-C link-arg=-fuse-ld=lld" }
          - { os: windows-latest, flags: "" }
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        name: Xcode version
        if: "contains(matrix.os, 'macOS')"
        with:
          xcode-version: latest-stable
      - uses: actions/checkout@v3
        name: Checkout
      - uses: ./.github/actions/setup_rust
        name: Setup Rust
      - name: Free up space (ubuntu)
        if: "contains(matrix.os, 'ubuntu')"
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: Install LLD
        if: "contains(matrix.os, 'ubuntu')"
        run: |
          sudo apt-get install lld
      - uses: webfactory/ssh-agent@v0.7.0
        name: Load pometry-storage key
        with:
          ssh-private-key: ${{ secrets.RA_SSH_PRIVATE_KEY }}
      - name: Rust version
        run: rustc --version --verbose
      - uses: Swatinem/rust-cache@v2
        name: Cargo cache
        with:
          cache-all-crates: true
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      - name: Activate pometry-storage in Cargo.toml
        run: make pull-storage
      - name: Run all Tests (disk_graph)
        env:
          RUSTFLAGS: -Awarnings ${{ matrix.flags }}
          TEMPDIR: ${{ runner.temp }}
        run: |
          cargo nextest run --all --no-default-features --features "storage" --cargo-profile test-ci
      - name: Check all features
        env:
          RUSTFLAGS: -Awarnings
        run: |
          cargo hack check --workspace --all-targets --each-feature  --skip extension-module,default


