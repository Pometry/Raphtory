[workspace]
members = [
    "raphtory",
    "raphtory-cypher",
    "raphtory-benchmark",
    "examples/rust",
    "examples/netflow",
    "examples/custom-gql-apis",
    "python",
    "raphtory-graphql",
    "raphtory-api",
    "raphtory-core",
    "raphtory-storage",
]
default-members = ["raphtory"]
resolver = "2"

[workspace.package]
version = "0.15.1"
documentation = "https://raphtory.readthedocs.io/en/latest/"
repository = "https://github.com/Raphtory/raphtory/"
license = "GPL-3.0"
readme = "README.md"
homepage = "https://github.com/Raphtory/raphtory/"
keywords = ["graph", "temporal-graph", "temporal"]
authors = ["Pometry"]
rust-version = "1.86.0"
edition = "2021"

# debug symbols are using a lot of resources
[profile.dev]
split-debuginfo = "unpacked"
debug = false

[profile.release-with-debug]
inherits = "release"
debug = true

# use this if you really need debug symbols
[profile.with-debug]
inherits = "dev"
debug = true

# for fast one-time builds (e.g., docs/CI)
[profile.build-fast]
inherits = "dev"
debug = false
incremental = false


[workspace.dependencies]
#[public-storage]
pometry-storage = { version = ">=0.8.1", path = "pometry-storage" }
#[private-storage]
# pometry-storage = { path = "pometry-storage-private", package = "pometry-storage-private" }
async-graphql = { version = "7.0.16", features = ["dynamic-schema"] }
bincode = "1.3.3"
async-graphql-poem = "7.0.16"
dynamic-graphql = "0.10.1"
reqwest = { version = "0.12.8", default-features = false, features = [
    "rustls-tls",
    "multipart",
    "json",
] }
iter-enum = { version = "1.2.0", features = ["rayon"] }
serde = { version = "1.0.197", features = ["derive", "rc"] }
serde_json = "1.0.114"
pyo3 = { version = "=0.23.3", features = ["multiple-pymethods", "chrono"] }
pyo3-build-config = "=0.23.3"
pyo3-arrow = "0.6"
numpy = "0.23.0"
itertools = "0.13.0"
rand = "0.8.5"
rayon = "1.8.1"
roaring = "0.10.6"
sorted_vector_map = "0.2.0"
tokio = { version = "1.43.1", features = ["full"] }
once_cell = "1.19.0"
parking_lot = { version = "0.12.1", features = [
    "serde",
    "arc_lock",
    "send_guard",
] }
ordered-float = "4.2.0"
chrono = { version = "=0.4.38", features = ["serde"] }
tempfile = "3.10.0"
futures-util = "0.3.30"
thiserror = "2.0.0"
dotenv = "0.15.0"
csv = "1.3.0"
flate2 = "1.0.28"
regex = "1.10.3"
num-traits = "0.2.18"
num-integer = "0.1"
rand_distr = "0.4.3"
rustc-hash = "2.0.0"
twox-hash = "2.1.0"
lock_api = { version = "0.4.11", features = ["arc_lock", "serde"] }
dashmap = { version = "6.0.1", features = ["serde", "rayon"] }
enum_dispatch = "0.3.12"
glam = "0.29.0"
quad-rand = "0.2.1"
zip = "2.3.0"
neo4rs = "0.8.0"
bzip2 = "0.4.4"
tantivy = "0.22.0"
async-trait = "0.1.77"
async-openai = "0.26.0"
num = "0.4.1"
display-error-chain = "0.2.0"
polars-arrow = "0.42.0"
polars-parquet = "0.42.0"
polars-core = "0.42.0"
polars-io = "0.42.0"
bigdecimal = { version = "0.4.7", features = ["serde"] }
kdam = "0.6.2"
hashbrown = "0.15.1"
pretty_assertions = "1.4.0"
quickcheck = "1.0.3"
quickcheck_macros = "1.0.0"
streaming-stats = "0.2.3"
proptest = "1.4.0"
proptest-derive = "0.5.1"
criterion = "0.5.1"
crossbeam-channel = "0.5.15"
base64 = "0.22.1"
jsonwebtoken = "9.3.1"
spki = "0.7.3"
poem = { version = "3.0.1", features = ["cookie"] }
opentelemetry = "0.27.1"
opentelemetry_sdk = { version = "0.27.1", features = ["rt-tokio"] }
opentelemetry-otlp = { version = "0.27.0" }
tracing = "0.1.37"
tracing-opentelemetry = "0.28.0"
tracing-subscriber = { version = "0.3.16", features = ["std", "env-filter"] }
indoc = "2.0.5"
walkdir = "2"
config = "0.14.0"
either = "=1.11.0"
clap = { version = "4.5.21", features = ["derive", "env"] }
memmap2 = { version = "0.9.4" }
ahash = { version = "0.8.3", features = ["serde"] }
bytemuck = { version = "1.18.0", features = ["derive"] }
ouroboros = "0.18.3"
url = "2.2"
base64-compat = { package = "base64-compat", version = "1.0.0" }
prost = "0.13.1"
prost-types = "0.13.1"
prost-build = "0.13.1"
lazy_static = "1.4.0"
pest = "2.7.8"
pest_derive = "2.7.8"
minijinja = "2.2.0"
minijinja-contrib = { version = "2.2.0", features = ["datetime"] }
datafusion = { version = "43.0.0" }
arroy = "0.6.1"
heed = "0.22.0"
sysinfo = "0.35.1"
sqlparser = "0.51.0"
futures = "0.3"
arrow = { version = "=53.2.0" }
parquet = { version = "=53.2.0" }
arrow-json = { version = "=53.2.0" }
arrow-buffer = { version = "=53.2.0" }
arrow-schema = { version = "=53.2.0" }
arrow-array = { version = "=53.2.0" }
arrow-ipc = { version = "=53.2.0" }
moka = { version = "0.12.7", features = ["sync"] }
indexmap = { version = "2.7.0", features = ["rayon"] }
fake = { version = "3.1.0", features = ["chrono"] }
strsim = { version = "0.11.1" }
uuid = { version = "1.16.0", features = ["v4"] }

# Make sure that transitive dependencies stick to disk_graph 50
[patch.crates-io]
arrow-buffer = { git = "https://github.com/apache/arrow-rs.git", tag = "53.2.0" }
arrow-schema = { git = "https://github.com/apache/arrow-rs.git", tag = "53.2.0" }
arrow-data = { git = "https://github.com/apache/arrow-rs.git", tag = "53.2.0" }
arrow-array = { git = "https://github.com/apache/arrow-rs.git", tag = "53.2.0" }
