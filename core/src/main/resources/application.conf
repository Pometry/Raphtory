raphtory {
  data {
    containsDeletions       = true
    containsDeletions       = ${?RAPHTORY_DATA_CONTAINSDELETIONS}
  }
    akka {
      port = 25520
      port = ${?RAPHTORY_AKKA_PORT}
      bindPort = 25520
      bindPort = ${?RAPHTORY_AKKA_BINDPORT}
    }

    communication {
      control = "auto"
      control = ${?RAPHTORY_COMMUNICATION_CONTROL}
    }

    prometheus {
      metrics {
        port = 9999
      }
    }

    python {
      active                  = false
      active                  = ${?RAPHTORY_PYTHON_ACTIVE}
      gatewayFilePath         = "/tmp/"${raphtory.deploy.id}"_python_gateway_connection_file"
    }

    zookeeper {
      address                 = "127.0.0.1:2181"
      address                 = ${?RAPHTORY_ZOOKEEPER_ADDRESS}
    }
    query {
      status                  = "NO QUERY TO EXECUTE"
      timeFormat              = "yyyy-MM-dd[ HH:mm:ss[.SSS]]"
      timeFormat              = ${?RAPHTORY_QUERY_TIMEFORMAT}
    }
    spout {
      topic                   = "raphtory_data_raw"
      topic                   = ${?RAPHTORY_SPOUT_TOPIC}
      copyFiles               = ${?RAPHTORY_SPOUT_COPY_FILES}
      failOnError             = true
      failOnError             = ${?RAPHTORY_SPOUT_FAIL_ON_ERROR}
    }
    builders {
      failOnError             = true
      failOnError             = ${?RAPHTORY_BUILDERS_FAIL_ON_ERROR}
    }
    partitions {
      serverCount             = 1
      serverCount             = ${?RAPHTORY_PARTITIONS_SERVERCOUNT}
      countPerServer          = 1
      countPerServer          = ${?RAPHTORY_PARTITIONS_COUNTPERSERVER}
      batchMessages           = true
      batchMessages           = ${?RAPHTORY_PARTITIONS_BATCHMESSAGES}
      maxMessageBatchSize     = 10000
      maxMessageBatchSize     = ${?RAPHTORY_PARTITIONS_BATCHSIZE}
      failOnError             = true
      failOnError             = ${?RAPHTORY_PARTITIONS_FAIL_ON_ERROR}
    }
    deploy {
      id                      = "raphtory"
      id                      = ${?RAPHTORY_DEPLOY_ID}
      address                 = "127.0.0.1"
      address                 = ${?RAPHTORY_DEPLOY_ADDRESS}
    }

    graph {
          id                      = "raphtory"
          id                      = ${?RAPHTORY_GRAPH_ID}
    }

  pulsar {
    broker {
      address               = "pulsar://localhost:6650"
      address               = ${?RAPHTORY_PULSAR_BROKER_ADDRESS}
      ioThreads             = 4
      listenerThreads       = 2
    }
    admin {
      address               = "http://127.0.0.1:8080"
      address               = ${?RAPHTORY_PULSAR_ADMIN_ADDRESS}
    }
    retention {
      time                  = 0
      time                  = ${?RAPHTORY_PULSAR_RETENTION_TIME}
      size                  = 0
      size                  = ${?RAPHTORY_PULSAR_RETENTION_SIZE}
    }
    topics {
      spout {
        tenant              = "public"
        tenant              = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
        tenant              = ${?RAPHTORY_PULSAR_TOPICS_SPOUT_TENANT}
        namespace           = ${raphtory.deploy.id}
        namespace           = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
        namespace           = ${?RAPHTORY_PULSAR_TOPICS_SPOUT_NAMESPACE}
        persistence         = true
        persistence         = ${?RAPHTORY_PULSAR_TOPICS_SPOUT_PERSISTENCE}
        retention {
          time              = ${raphtory.pulsar.retention.time}
          time              = ${?RAPHTORY_PULSAR_TOPICS_SPOUT_RETENTION_TIME}
          size              = ${raphtory.pulsar.retention.size}
          size              = ${?RAPHTORY_PULSAR_TOPICS_SPOUT_RETENTION_SIZE}
        }
      }
      graph.updates {
        tenant                  = "public"
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_GRAPH_UPDATES_TENANT}
        namespace               = ${raphtory.deploy.id}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_GRAPH_UPDATES_NAMESPACE}
        persistence             = true
        persistence             = ${?RAPHTORY_PULSAR_TOPICS_GRAPH_UPDATES_PERSISTENCE}
        retention {
          time                  = ${raphtory.pulsar.retention.time}
          time                  = ${?RAPHTORY_PULSAR_TOPICS_GRAPH_UPDATES_RETENTION_TIME}
          size                  = ${raphtory.pulsar.retention.size}
          size                  = ${?RAPHTORY_PULSAR_TOPICS_GRAPH_UPDATES_RETENTION_SIZE}
        }
      }
      cluster.comms {
              tenant                  = "public"
              tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
              tenant                  = ${?RAPHTORY_PULSAR_TOPICS_CLUSTER_COMMS_TENANT}
              namespace               = ${raphtory.deploy.id}
              namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
              namespace               = ${?RAPHTORY_PULSAR_TOPICS_CLUSTER_COMMS_NAMESPACE}
              persistence             = true
              persistence             = ${?RAPHTORY_PULSAR_TOPICS_CLUSTER_COMMS_PERSISTENCE}
              retention {
                time                  = ${raphtory.pulsar.retention.time}
                time                  = ${?RAPHTORY_PULSAR_TOPICS_CLUSTER_COMMS_RETENTION_TIME}
                size                  = ${raphtory.pulsar.retention.size}
                size                  = ${?RAPHTORY_PULSAR_TOPICS_CLUSTER_COMMS_RETENTION_SIZE}
              }
            }
      graph.sync {
        tenant                  = "public"
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_GRAPH_SYNC_TENANT}
        namespace               = ${raphtory.deploy.id}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_GRAPH_SYNC_NAMESPACE}
        persistence             = true
        persistence             = ${?RAPHTORY_PULSAR_TOPICS_GRAPH_SYNC_PERSISTENCE}
        retention {
          time                  = ${raphtory.pulsar.retention.time}
          time                  = ${?RAPHTORY_PULSAR_TOPICS_GRAPH_SYNC_RETENTION_TIME}
          size                  = ${raphtory.pulsar.retention.size}
          size                  = ${?RAPHTORY_PULSAR_TOPICS_GRAPH_SYNC_RETENTION_SIZE}
        }
      }
      submissions {
        tenant                  = "public"
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_SUBMISSIONS_TENANT}
        namespace               = ${raphtory.deploy.id}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_SUBMISSIONS_NAMESPACE}
        persistence             = true
        persistence             = ${?RAPHTORY_PULSAR_TOPICS_SUBMISSIONS_PERSISTENCE}
        retention {
          time                  = ${raphtory.pulsar.retention.time}
          time                  = ${?RAPHTORY_PULSAR_TOPICS_SUBMISSIONS_RETENTION_TIME}
          size                  = ${raphtory.pulsar.retention.size}
          size                  = ${?RAPHTORY_PULSAR_TOPICS_SUBMISSIONS_RETENTION_SIZE}
        }
      }
      completed.queries {
        tenant                  = "public"
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_COMPLETED_QUERIES_TENANT}
        namespace               = ${raphtory.deploy.id}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_COMPLETED_QUERIES_NAMESPACE}
        persistence             = true
        persistence             = ${?RAPHTORY_PULSAR_TOPICS_COMPLETED_QUERIES_PERSISTENCE}
        retention {
          time                  = ${raphtory.pulsar.retention.time}
          time                  = ${?RAPHTORY_PULSAR_TOPICS_COMPLETED_QUERIES_RETENTION_TIME}
          size                  = ${raphtory.pulsar.retention.size}
          size                  = ${?RAPHTORY_PULSAR_TOPICS_COMPLETED_QUERIES_RETENTION_SIZE}
        }
      }
      watermark {
        tenant                  = "public"
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_WATERMARK_TENANT}
        namespace               = ${raphtory.deploy.id}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_WATERMARK_NAMESPACE}
        persistence             = true
        persistence             = ${?RAPHTORY_PULSAR_TOPICS_WATERMARK_PERSISTENCE}
        retention {
          time                  = ${raphtory.pulsar.retention.time}
          time                  = ${?RAPHTORY_PULSAR_TOPICS_WATERMARK_RETENTION_TIME}
          size                  = ${raphtory.pulsar.retention.size}
          size                  = ${?RAPHTORY_PULSAR_TOPICS_WATERMARK_RETENTION_SIZE}
        }
      }
      graph.setup {
                    tenant                  = "public"
                    tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
                    tenant                  = ${?RAPHTORY_PULSAR_TOPICS_INGEST_SETUP_TENANT}
                    namespace               = ${raphtory.deploy.id}
                    namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
                    namespace               = ${?RAPHTORY_PULSAR_TOPICS_INGEST_SETUP_NAMESPACE}
                    persistence             = true
                    persistence             = ${?RAPHTORY_PULSAR_TOPICS_INGEST_SETUP_PERSISTENCE}
                    retention {
                      time                  = ${raphtory.pulsar.retention.time}
                      time                  = ${?RAPHTORY_PULSAR_TOPICS_INGEST_SETUP_RETENTION_TIME}
                      size                  = ${raphtory.pulsar.retention.size}
                      size                  = ${?RAPHTORY_PULSAR_TOPICS_INGEST_SETUP_RETENTION_SIZE}
                    }
                  }
      ingest.setup {
              tenant                  = "public"
              tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
              tenant                  = ${?RAPHTORY_PULSAR_TOPICS_INGEST_SETUP_TENANT}
              namespace               = ${raphtory.deploy.id}
              namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
              namespace               = ${?RAPHTORY_PULSAR_TOPICS_INGEST_SETUP_NAMESPACE}
              persistence             = true
              persistence             = ${?RAPHTORY_PULSAR_TOPICS_INGEST_SETUP_PERSISTENCE}
              retention {
                time                  = ${raphtory.pulsar.retention.time}
                time                  = ${?RAPHTORY_PULSAR_TOPICS_INGEST_SETUP_RETENTION_TIME}
                size                  = ${raphtory.pulsar.retention.size}
                size                  = ${?RAPHTORY_PULSAR_TOPICS_INGEST_SETUP_RETENTION_SIZE}
              }
            }
      partition.setup {
        tenant                  = "public"
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_PARTITION_SETUP_TENANT}
        namespace               = ${raphtory.deploy.id}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_PARTITION_SETUP_NAMESPACE}
        persistence             = true
        persistence             = ${?RAPHTORY_PULSAR_TOPICS_PARTITION_SETUP_PERSISTENCE}
        retention {
          time                  = ${raphtory.pulsar.retention.time}
          time                  = ${?RAPHTORY_PULSAR_TOPICS_PARTITION_SETUP_RETENTION_TIME}
          size                  = ${raphtory.pulsar.retention.size}
          size                  = ${?RAPHTORY_PULSAR_TOPICS_PARTITION_SETUP_RETENTION_SIZE}
        }
      }
      query.track {
        tenant                  = "public"
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_QUERY_TRACK_TENANT}
        namespace               = ${raphtory.deploy.id}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_QUERY_TRACK_NAMESPACE}
        persistence             = true
        persistence             = ${?RAPHTORY_PULSAR_TOPICS_QUERY_TRACK_PERSISTENCE}
        retention {
          time                  = ${raphtory.pulsar.retention.time}
          time                  = ${?RAPHTORY_PULSAR_TOPICS_QUERY_TRACK_RETENTION_TIME}
          size                  = ${raphtory.pulsar.retention.size}
          size                  = ${?RAPHTORY_PULSAR_TOPICS_QUERY_TRACK_RETENTION_SIZE}
        }
      }
      rechecks {
        tenant                  = "public"
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_RECHECKS_TENANT}
        namespace               = ${raphtory.deploy.id}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_RECHECKS_NAMESPACE}
        persistence             = true
        persistence             = ${?RAPHTORY_PULSAR_TOPICS_RECHECKS_PERSISTENCE}
        retention {
          time                  = ${raphtory.pulsar.retention.time}
          time                  = ${?RAPHTORY_PULSAR_TOPICS_RECHECKS_RETENTION_TIME}
          size                  = ${raphtory.pulsar.retention.size}
          size                  = ${?RAPHTORY_PULSAR_TOPICS_RECHECKS_RETENTION_SIZE}
        }
      }
      job.status {
        tenant                  = "public"
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_JOB_STATUS_TENANT}
        namespace               = ${raphtory.deploy.id}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_JOB_STATUS_NAMESPACE}
        persistence             = true
        persistence             = ${?RAPHTORY_PULSAR_TOPICS_JOB_STATUS_PERSISTENCE}
        retention {
          time                  = ${raphtory.pulsar.retention.time}
          time                  = ${?RAPHTORY_PULSAR_TOPICS_JOB_STATUS_RETENTION_TIME}
          size                  = ${raphtory.pulsar.retention.size}
          size                  = ${?RAPHTORY_PULSAR_TOPICS_JOB_STATUS_RETENTION_SIZE}
        }
      }
      vertex.messages {
        tenant                  = "public"
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_VERTEX_MESSAGES_TENANT}
        namespace               = ${raphtory.deploy.id}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_VERTEX_MESSAGES_NAMESPACE}
        persistence             = true
        persistence             = ${?RAPHTORY_PULSAR_TOPICS_VERTEX_MESSAGES_PERSISTENCE}
        retention {
          time                  = ${raphtory.pulsar.retention.time}
          time                  = ${?RAPHTORY_PULSAR_TOPICS_VERTEX_MESSAGES_RETENTION_TIME}
          size                  = ${raphtory.pulsar.retention.size}
          size                  = ${?RAPHTORY_PULSAR_TOPICS_VERTEX_MESSAGES_RETENTION_SIZE}
        }
      }
      job.operations {
        tenant                  = "public"
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
        tenant                  = ${?RAPHTORY_PULSAR_TOPICS_JOB_OPERATIONS_TENANT}
        namespace               = ${raphtory.deploy.id}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
        namespace               = ${?RAPHTORY_PULSAR_TOPICS_JOB_OPERATIONS_NAMESPACE}
        persistence             = true
        persistence             = ${?RAPHTORY_PULSAR_TOPICS_JOB_OPERATIONS_PERSISTENCE}
        retention {
          time                  = ${raphtory.pulsar.retention.time}
          time                  = ${?RAPHTORY_PULSAR_TOPICS_JOB_OPERATIONS_RETENTION_TIME}
          size                  = ${raphtory.pulsar.retention.size}
          size                  = ${?RAPHTORY_PULSAR_TOPICS_JOB_OPERATIONS_RETENTION_SIZE}
        }
      }
      vertex.messages.sync {
              tenant                  = "public"
              tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
              tenant                  = ${?RAPHTORY_PULSAR_TOPICS_VERTEX_MESSAGES_TENANT}
              namespace               = ${raphtory.deploy.id}
              namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
              namespace               = ${?RAPHTORY_PULSAR_TOPICS_VERTEX_MESSAGES_NAMESPACE}
              persistence             = true
              persistence             = ${?RAPHTORY_PULSAR_TOPICS_VERTEX_MESSAGES_PERSISTENCE}
              retention {
                time                  = ${raphtory.pulsar.retention.time}
                time                  = ${?RAPHTORY_PULSAR_TOPICS_VERTEX_MESSAGES_RETENTION_TIME}
                size                  = ${raphtory.pulsar.retention.size}
                size                  = ${?RAPHTORY_PULSAR_TOPICS_VERTEX_MESSAGES_RETENTION_SIZE}
              }
            }
            job.operations {
              tenant                  = "public"
              tenant                  = ${?RAPHTORY_PULSAR_TOPICS_TENANT}
              tenant                  = ${?RAPHTORY_PULSAR_TOPICS_JOB_OPERATIONS_TENANT}
              namespace               = ${raphtory.deploy.id}
              namespace               = ${?RAPHTORY_PULSAR_TOPICS_NAMESPACE}
              namespace               = ${?RAPHTORY_PULSAR_TOPICS_JOB_OPERATIONS_NAMESPACE}
              persistence             = true
              persistence             = ${?RAPHTORY_PULSAR_TOPICS_JOB_OPERATIONS_PERSISTENCE}
              retention {
                time                  = ${raphtory.pulsar.retention.time}
                time                  = ${?RAPHTORY_PULSAR_TOPICS_JOB_OPERATIONS_RETENTION_TIME}
                size                  = ${raphtory.pulsar.retention.size}
                size                  = ${?RAPHTORY_PULSAR_TOPICS_JOB_OPERATIONS_RETENTION_SIZE}
              }
            }
    }
  }
}

